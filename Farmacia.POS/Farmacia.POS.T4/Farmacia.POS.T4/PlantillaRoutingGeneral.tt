<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ Assembly Name="System.Data" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="$(ProjectDir)\PlantillaFunciones.tt" #>
<#
    //string directorioRaiz = Path.GetDirectoryName(Host.TemplateFile);
    string directorioRaiz = @"C:\desarrollo\GitHub\farmfront-end\src\app"; //Path.GetDirectoryName(Host.TemplateFile);

    directorioRaiz  = Path.Combine(directorioRaiz,"_modulos", "admin");
    DataSet datTablas= ejecutarConsulta("SELECT t.name, td.value AS [table_desc] "+
        "FROM sys.sysobjects t "+
        " JOIN sys.extended_properties td on  td.major_id = t.id "+
        " AND     td.minor_id = 0 "+
        " AND     td.name = 'MS_Description'"+
        " order by  t.name ");
     
#>
import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';

const routes: Routes = [
    { path: '', component: StructComponent,
      children: [
<#
foreach(DataRow renglon in datTablas.Tables[0].Rows)
    {
 #>
  { path: '<#= toCamelCaseArchivo(renglon["name"].ToString())#>', loadChildren: '../<#=singulalizarPalabra(toCamelCaseArchivo( renglon["name"].ToString())) #>/<#=singulalizarPalabra(toCamelCaseArchivo( renglon["name"].ToString())) #>.module#<#=singulalizarPalabra(renglon["name"].ToString()) #>Module'},
<#
   }
 #>]}
];

@NgModule({
  imports: [RouterModule.forChild(routes)],
  exports: [RouterModule]
})
export class AdminRoutingModule { }
<#
  guardarSalida(directorioRaiz,"admin-routing.module.ts");
#>