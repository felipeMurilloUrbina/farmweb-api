<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ Assembly Name="System.Data" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="$(ProjectDir)\PlantillaFunciones.tt" #>
<#
    string directorioRaiz = @"C:\desarrollo\GitHub\farmfront-end\src\app"; //Path.GetDirectoryName(Host.TemplateFile);
    //string directorioRaiz = Path.GetDirectoryName(Host.TemplateFile);
    directorioRaiz  = Path.Combine(directorioRaiz,"_modulos");
    DataSet datTablas= ejecutarConsulta("SELECT t.name, td.value AS [table_desc] "+
        "FROM sys.sysobjects t "+
        " JOIN sys.extended_properties td on  td.major_id = t.id "+
        " AND     td.minor_id = 0 "+
        " AND     td.name = 'MS_Description'"+
        " order by  t.name ");
    foreach(DataRow renglon in datTablas.Tables[0].Rows)
    {
       
#>
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ModulesPrimeng } from '../../_interceptors/modulos';

import { <#=singulalizarPalabra(renglon["name"].ToString()) #>RoutingModule } from './<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>-routing.module';
import { <#=singulalizarPalabra(renglon["name"].ToString()) #>Component } from './<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.component';
import { <#=singulalizarPalabra(renglon["name"].ToString()) #>Service } from '../../_servicios/<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.service';
import { Nuevo<#=singulalizarPalabra(renglon["name"].ToString()) #>Component } from './nuevo/nuevo.component';

@NgModule({
  imports: [
    ModulesPrimeng,
    CommonModule,
    <#=singulalizarPalabra(renglon["name"].ToString()) #>RoutingModule
  ],
  declarations: [
    <#=singulalizarPalabra(renglon["name"].ToString()) #>Component,
    Nuevo<#=singulalizarPalabra(renglon["name"].ToString()) #>Component,
  ],
   providers: [<#=singulalizarPalabra(renglon["name"].ToString()) #>Service]
})
export class <#=singulalizarPalabra(renglon["name"].ToString()) #>Module { }

<#
 
#>

<#
  guardarSalida(Path.Combine(directorioRaiz,singulalizarPalabra(toCamelCaseArchivo( renglon["name"].ToString()))), singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) + ".module.ts");
    }

     foreach(DataRow renglon in datTablas.Tables[0].Rows)
    {
#>
import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { <#=singulalizarPalabra(renglon["name"].ToString()) #>Component } from './<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.component';
import { Nuevo<#=singulalizarPalabra(renglon["name"].ToString()) #>Component } from './nuevo/nuevo.component';

const routes: Routes = [
  {path: '', component: <#=singulalizarPalabra(renglon["name"].ToString()) #>Component},
  {path: 'nuevo', component: Nuevo<#=singulalizarPalabra(renglon["name"].ToString()) #>Component},
  {path: 'editar/:id', component: Nuevo<#=singulalizarPalabra(renglon["name"].ToString()) #>Component}
];

@NgModule({
  imports: [RouterModule.forChild(routes)],
  exports: [RouterModule]
})
export class <#=singulalizarPalabra(renglon["name"].ToString()) #>RoutingModule { }
<#
        guardarSalida(Path.Combine(directorioRaiz,singulalizarPalabra(toCamelCaseArchivo( renglon["name"].ToString()))),singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) + "-routing.module.ts");
    }
#>