<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ Assembly Name="System.Data" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="$(ProjectDir)\PlantillaFunciones.tt" #>
<#
    //string directorioRaiz = Path.GetDirectoryName(Host.TemplateFile);
    string directorioRaiz = @"C:\desarrollo\GitHub\farmfront-end\src\app"; //Path.GetDirectoryName(Host.TemplateFile);

    directorioRaiz  = Path.Combine(directorioRaiz,"_modulos");
    DataSet datTablas= ejecutarConsulta("SELECT t.name, td.value AS [table_desc] "+
        "FROM sys.sysobjects t "+
        " JOIN sys.extended_properties td on  td.major_id = t.id "+
        " AND     td.minor_id = 0 "+
        " AND     td.name = 'MS_Description'"+
        " order by  t.name ");
    foreach(DataRow renglon in datTablas.Tables[0].Rows)
    {
       
#>
import { Component, OnInit } from '@angular/core';
import { <#=singulalizarPalabra(renglon["name"].ToString()) #>Service } from '../../_servicios/<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.service';
import { MensajeEstatus } from '../../_modelos/mensaje.enum';

@Component({
  selector: 'app-<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>',
  templateUrl: './<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.component.html',
  styleUrls: ['./<#=singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) #>.component.css']
})
export class <#=singulalizarPalabra(renglon["name"].ToString()) #>Component implements OnInit {
  <#=(renglon["name"].ToString()) #>: any[];
  cols: any[];
  titulo = '<#=(renglon["name"].ToString()) #>';  
  constructor(public servicio: <#=singulalizarPalabra(renglon["name"].ToString()) #>Service) { 
<#
        DataRowCollection columnas = getColumnas(renglon["name"].ToString());
        
#>
        this.cols = [
<#
  foreach(DataRow columna in columnas)
        {
#>
          { field: '<#=toCamelCase(columna["column"].ToString()) #>', header: '<#=(columna["Description"].ToString()) #>' },
<#
  }                                                                                                    
#>
        ]; 
  }


  ngOnInit() {
    this.get();
  }

  get() {
    this.servicio.getAll(1, 0).subscribe(data => {
      this.<#=(renglon["name"].ToString()) #> = data['items'];
    });
  }
}

<#
 
#>

<#
  guardarSalida(Path.Combine(directorioRaiz,singulalizarPalabra(toCamelCaseArchivo( renglon["name"].ToString()))), singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) + ".component.ts");
  guardarSalida(Path.Combine(directorioRaiz,singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString()))), singulalizarPalabra(toCamelCaseArchivo(renglon["name"].ToString())) + ".component.css");

    }
#>  
