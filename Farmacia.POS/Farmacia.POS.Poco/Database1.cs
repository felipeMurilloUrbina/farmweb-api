

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Farmacia.POS.WebApi\Web.config"
//     Connection String Name: "DefaultConnection"
//     Connection String:      "data source=.;initial catalog=FarmBD;integrated security=SSPI"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Express Edition (64-bit)
// Database Engine Edition : Express
// Database Version        : 11.0.2100.60

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 1.4
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Farmacia.POS.Model
{
    using Farmacia.POS.Model;
    using System.Linq;

    #region Unit of work

    public interface IContexto : System.IDisposable
    {
        System.Data.Entity.DbSet<Almacene> Almacenes { get; set; } // Almacenes
        System.Data.Entity.DbSet<AlmacenProducto> AlmacenProductoes { get; set; } // AlmacenProductos
        System.Data.Entity.DbSet<Categoria> Categorias { get; set; } // Categorias
        System.Data.Entity.DbSet<Cliente> Clientes { get; set; } // Clientes
        System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // Empresas
        System.Data.Entity.DbSet<Entrada> Entradas { get; set; } // Entradas
        System.Data.Entity.DbSet<EntradaDetalle> EntradaDetalles { get; set; } // EntradaDetalles
        System.Data.Entity.DbSet<Formato> Formatoes { get; set; } // Formatos
        System.Data.Entity.DbSet<Linea> Lineas { get; set; } // Lineas
        System.Data.Entity.DbSet<Lote> Lotes { get; set; } // Lotes
        System.Data.Entity.DbSet<Plane> Planes { get; set; } // Planes
        System.Data.Entity.DbSet<Producto> Productoes { get; set; } // Productos
        System.Data.Entity.DbSet<Sucursale> Sucursales { get; set; } // Sucursales
        System.Data.Entity.DbSet<TiposMovimiento> TiposMovimientoes { get; set; } // TiposMovimiento

        int SaveChanges();
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Contexto : System.Data.Entity.DbContext, IContexto
    {
        public System.Data.Entity.DbSet<Almacene> Almacenes { get; set; } // Almacenes
        public System.Data.Entity.DbSet<AlmacenProducto> AlmacenProductoes { get; set; } // AlmacenProductos
        public System.Data.Entity.DbSet<Categoria> Categorias { get; set; } // Categorias
        public System.Data.Entity.DbSet<Cliente> Clientes { get; set; } // Clientes
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // Empresas
        public System.Data.Entity.DbSet<Entrada> Entradas { get; set; } // Entradas
        public System.Data.Entity.DbSet<EntradaDetalle> EntradaDetalles { get; set; } // EntradaDetalles
        public System.Data.Entity.DbSet<Formato> Formatoes { get; set; } // Formatos
        public System.Data.Entity.DbSet<Linea> Lineas { get; set; } // Lineas
        public System.Data.Entity.DbSet<Lote> Lotes { get; set; } // Lotes
        public System.Data.Entity.DbSet<Plane> Planes { get; set; } // Planes
        public System.Data.Entity.DbSet<Producto> Productoes { get; set; } // Productos
        public System.Data.Entity.DbSet<Sucursale> Sucursales { get; set; } // Sucursales
        public System.Data.Entity.DbSet<TiposMovimiento> TiposMovimientoes { get; set; } // TiposMovimiento

        static Contexto()
        {
            System.Data.Entity.Database.SetInitializer<Contexto>(null);
        }

        public Contexto()
            : base("Name=DefaultConnection")
        {
        }

        public Contexto(string connectionString)
            : base(connectionString)
        {
        }

        public Contexto(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public Contexto(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public Contexto(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AlmaceneConfiguration());
            modelBuilder.Configurations.Add(new AlmacenProductoConfiguration());
            modelBuilder.Configurations.Add(new CategoriaConfiguration());
            modelBuilder.Configurations.Add(new ClienteConfiguration());
            modelBuilder.Configurations.Add(new EmpresaConfiguration());
            modelBuilder.Configurations.Add(new EntradaConfiguration());
            modelBuilder.Configurations.Add(new EntradaDetalleConfiguration());
            modelBuilder.Configurations.Add(new FormatoConfiguration());
            modelBuilder.Configurations.Add(new LineaConfiguration());
            modelBuilder.Configurations.Add(new LoteConfiguration());
            modelBuilder.Configurations.Add(new PlaneConfiguration());
            modelBuilder.Configurations.Add(new ProductoConfiguration());
            modelBuilder.Configurations.Add(new SucursaleConfiguration());
            modelBuilder.Configurations.Add(new TiposMovimientoConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AlmaceneConfiguration(schema));
            modelBuilder.Configurations.Add(new AlmacenProductoConfiguration(schema));
            modelBuilder.Configurations.Add(new CategoriaConfiguration(schema));
            modelBuilder.Configurations.Add(new ClienteConfiguration(schema));
            modelBuilder.Configurations.Add(new EmpresaConfiguration(schema));
            modelBuilder.Configurations.Add(new EntradaConfiguration(schema));
            modelBuilder.Configurations.Add(new EntradaDetalleConfiguration(schema));
            modelBuilder.Configurations.Add(new FormatoConfiguration(schema));
            modelBuilder.Configurations.Add(new LineaConfiguration(schema));
            modelBuilder.Configurations.Add(new LoteConfiguration(schema));
            modelBuilder.Configurations.Add(new PlaneConfiguration(schema));
            modelBuilder.Configurations.Add(new ProductoConfiguration(schema));
            modelBuilder.Configurations.Add(new SucursaleConfiguration(schema));
            modelBuilder.Configurations.Add(new TiposMovimientoConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class ContextoFactory : System.Data.Entity.Infrastructure.IDbContextFactory<Contexto>
    {
        public Contexto Create()
        {
            return new Contexto();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeContexto : IContexto
    {
        public System.Data.Entity.DbSet<Almacene> Almacenes { get; set; }
        public System.Data.Entity.DbSet<AlmacenProducto> AlmacenProductoes { get; set; }
        public System.Data.Entity.DbSet<Categoria> Categorias { get; set; }
        public System.Data.Entity.DbSet<Cliente> Clientes { get; set; }
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; }
        public System.Data.Entity.DbSet<Entrada> Entradas { get; set; }
        public System.Data.Entity.DbSet<EntradaDetalle> EntradaDetalles { get; set; }
        public System.Data.Entity.DbSet<Formato> Formatoes { get; set; }
        public System.Data.Entity.DbSet<Linea> Lineas { get; set; }
        public System.Data.Entity.DbSet<Lote> Lotes { get; set; }
        public System.Data.Entity.DbSet<Plane> Planes { get; set; }
        public System.Data.Entity.DbSet<Producto> Productoes { get; set; }
        public System.Data.Entity.DbSet<Sucursale> Sucursales { get; set; }
        public System.Data.Entity.DbSet<TiposMovimiento> TiposMovimientoes { get; set; }

        public FakeContexto()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            Almacenes = new FakeDbSet<Almacene>("Id");
            AlmacenProductoes = new FakeDbSet<AlmacenProducto>("ProductoId", "AlmacenId", "Stock");
            Categorias = new FakeDbSet<Categoria>("Id");
            Clientes = new FakeDbSet<Cliente>("Id");
            Empresas = new FakeDbSet<Empresa>("Id");
            Entradas = new FakeDbSet<Entrada>("Id");
            EntradaDetalles = new FakeDbSet<EntradaDetalle>("EntradaId", "ProductoId", "Cantidad", "Costo", "Costo1", "Iva");
            Formatoes = new FakeDbSet<Formato>("Id");
            Lineas = new FakeDbSet<Linea>("Id");
            Lotes = new FakeDbSet<Lote>("Id");
            Planes = new FakeDbSet<Plane>("Id");
            Productoes = new FakeDbSet<Producto>("Id");
            Sucursales = new FakeDbSet<Sucursale>("Id");
            TiposMovimientoes = new FakeDbSet<TiposMovimiento>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return _query.Provider; }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }
    }

    #endregion

    #region POCO classes

    // Almacenes
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Almacene
    {
        public int Id { get; set; } // Id (Primary key)
        public int SucursalId { get; set; } // SucursalId
        public int EmpresaId { get; set; } // EmpresaId
        public string UsuarioCreadorId { get; set; } // UsuarioCreadorId (length: 128)
        public string UsuarioModificadorId { get; set; } // UsuarioModificadorId (length: 128)

        ///<summary>
        /// Codigo
        ///</summary>
        public string Codigo { get; set; } // Codigo (length: 50)
        public string Descripcion { get; set; } // Descripcion (length: 300)
        public bool Activo { get; set; } // Activo

        ///<summary>
        /// Valor Minimo
        ///</summary>
        public decimal ValorMin { get; set; } // ValorMin

        ///<summary>
        /// Valor Maximo
        ///</summary>
        public decimal ValorMax { get; set; } // ValorMax
        public System.DateTime Fecha { get; set; } // Fecha

        // Reverse navigation

        /// <summary>
        /// Child AlmacenProductoes where [AlmacenProductos].[AlmacenId] point to this entity (FK_AlmacenProductos_Almacenes)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AlmacenProducto> AlmacenProductoes { get; set; } // AlmacenProductos.FK_AlmacenProductos_Almacenes

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Almacenes].([SucursalId]) (FK_Almacenes_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Almacenes_Empresas

        /// <summary>
        /// Parent Sucursale pointed by [Almacenes].([SucursalId]) (FK_Almacenes_Sucursales)
        /// </summary>
        public virtual Sucursale Sucursale { get; set; } // FK_Almacenes_Sucursales

        public Almacene()
        {
            AlmacenProductoes = new System.Collections.Generic.List<AlmacenProducto>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // AlmacenProductos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class AlmacenProducto
    {
        public int ProductoId { get; set; } // ProductoId (Primary key)
        public int AlmacenId { get; set; } // AlmacenId (Primary key)
        public decimal Stock { get; set; } // Stock (Primary key)
        public System.DateTime? FechaUltimo { get; set; } // FechaUltimo

        // Foreign keys

        /// <summary>
        /// Parent Almacene pointed by [AlmacenProductos].([AlmacenId]) (FK_AlmacenProductos_Almacenes)
        /// </summary>
        public virtual Almacene Almacene { get; set; } // FK_AlmacenProductos_Almacenes

        /// <summary>
        /// Parent Producto pointed by [AlmacenProductos].([ProductoId]) (FK_AlmacenProductos_Productos)
        /// </summary>
        public virtual Producto Producto { get; set; } // FK_AlmacenProductos_Productos

        public AlmacenProducto()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Categorias
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Categoria
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string UsuarioCreadorId { get; set; } // UsuarioCreadorId (length: 128)
        public string UsuarioModificadorId { get; set; } // UsuarioModificadorId (length: 128)

        ///<summary>
        /// Codigo
        ///</summary>
        public string Codigo { get; set; } // Codigo (length: 50)

        ///<summary>
        /// Descripcion
        ///</summary>
        public string Descripcion { get; set; } // Descripcion (length: 100)
        public bool Activo { get; set; } // Activo

        ///<summary>
        /// Fecha
        ///</summary>
        public System.DateTime Fecha { get; set; } // Fecha

        // Reverse navigation

        /// <summary>
        /// Child Productoes where [Productos].[CategoriaId] point to this entity (FK_Productos_Categorias)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Producto> Productoes { get; set; } // Productos.FK_Productos_Categorias

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Categorias].([EmpresaId]) (FK_Categorias_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Categorias_Empresas

        public Categoria()
        {
            Productoes = new System.Collections.Generic.List<Producto>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Clientes
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Cliente
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int UsuarioCreadorId { get; set; } // UsuarioCreadorId
        public int UsuarioModificadorId { get; set; } // UsuarioModificadorId

        ///<summary>
        /// Descripcion
        ///</summary>
        public string Descripcion { get; set; } // Descripcion (length: 300)

        ///<summary>
        /// Calle
        ///</summary>
        public string Calle { get; set; } // Calle (length: 300)
        public string Colonia { get; set; } // Colonia (length: 50)
        public string Ciudad { get; set; } // Ciudad (length: 50)

        ///<summary>
        /// Codigo Postal
        ///</summary>
        public string CodigoPostal { get; set; } // CodigoPostal (length: 50)
        public string Municipio { get; set; } // Municipio (length: 100)
        public string Estado { get; set; } // Estado (length: 100)
        public string Pais { get; set; } // Pais (length: 100)
        public string Telefono { get; set; } // Telefono (length: 50)
        public string Celular { get; set; } // Celular (length: 50)
        public string NombreContacto { get; set; } // NombreContacto (length: 500)

        ///<summary>
        /// RFC
        ///</summary>
        public string Rfc { get; set; } // Rfc (length: 100)
        public string Correo { get; set; } // Correo (length: 200)

        ///<summary>
        /// Fecha
        ///</summary>
        public System.DateTime Fecha { get; set; } // Fecha
        public bool Activo { get; set; } // Activo
        public bool TieneCredito { get; set; } // TieneCredito
        public int DiasCredito { get; set; } // DiasCredito
        public decimal LimiteCredito { get; set; } // LimiteCredito

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Clientes].([EmpresaId]) (FK_Clientes_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Clientes_Empresas

        public Cliente()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Empresas
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Empresa
    {
        public int Id { get; set; } // Id (Primary key)
        public int TipoPlanId { get; set; } // TipoPlanId
        public string Descripcion { get; set; } // Descripcion (length: 300)
        public string Avatar { get; set; } // Avatar
        public System.DateTime? Fecha { get; set; } // Fecha
        public bool Activo { get; set; } // Activo

        // Reverse navigation

        /// <summary>
        /// Child Almacenes where [Almacenes].[SucursalId] point to this entity (FK_Almacenes_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Almacene> Almacenes { get; set; } // Almacenes.FK_Almacenes_Empresas
        /// <summary>
        /// Child Categorias where [Categorias].[EmpresaId] point to this entity (FK_Categorias_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Categoria> Categorias { get; set; } // Categorias.FK_Categorias_Empresas
        /// <summary>
        /// Child Clientes where [Clientes].[EmpresaId] point to this entity (FK_Clientes_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Cliente> Clientes { get; set; } // Clientes.FK_Clientes_Empresas
        /// <summary>
        /// Child Entradas where [Entradas].[EmpresaId] point to this entity (FK_Entradas_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Entrada> Entradas { get; set; } // Entradas.FK_Entradas_Empresas
        /// <summary>
        /// Child Lineas where [Lineas].[EmpresaId] point to this entity (FK_Lineas_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Linea> Lineas { get; set; } // Lineas.FK_Lineas_Empresas
        /// <summary>
        /// Child Productoes where [Productos].[EmpresaId] point to this entity (FK_Productos_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Producto> Productoes { get; set; } // Productos.FK_Productos_Empresas
        /// <summary>
        /// Child Sucursales where [Sucursales].[EmpresaId] point to this entity (FK_Sucursales_Empresas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sucursale> Sucursales { get; set; } // Sucursales.FK_Sucursales_Empresas

        // Foreign keys

        /// <summary>
        /// Parent Plane pointed by [Empresas].([TipoPlanId]) (FK_Empresas_Planes)
        /// </summary>
        public virtual Plane Plane { get; set; } // FK_Empresas_Planes

        public Empresa()
        {
            Almacenes = new System.Collections.Generic.List<Almacene>();
            Categorias = new System.Collections.Generic.List<Categoria>();
            Clientes = new System.Collections.Generic.List<Cliente>();
            Entradas = new System.Collections.Generic.List<Entrada>();
            Lineas = new System.Collections.Generic.List<Linea>();
            Productoes = new System.Collections.Generic.List<Producto>();
            Sucursales = new System.Collections.Generic.List<Sucursale>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Entradas
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Entrada
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int? ProveedorId { get; set; } // ProveedorId
        public string UsuarioCreadorId { get; set; } // UsuarioCreadorId (length: 128)
        public string UsuarioModificadorId { get; set; } // UsuarioModificadorId (length: 128)
        public System.DateTime FechaMovimiento { get; set; } // FechaMovimiento

        ///<summary>
        /// Fecha
        ///</summary>
        public System.DateTime Fecha { get; set; } // Fecha
        public bool Activo { get; set; } // Activo

        // Reverse navigation

        /// <summary>
        /// Child EntradaDetalles where [EntradaDetalles].[EntradaId] point to this entity (FK_EntradaDetalles_Entradas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EntradaDetalle> EntradaDetalles { get; set; } // EntradaDetalles.FK_EntradaDetalles_Entradas

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Entradas].([EmpresaId]) (FK_Entradas_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Entradas_Empresas

        public Entrada()
        {
            EntradaDetalles = new System.Collections.Generic.List<EntradaDetalle>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // EntradaDetalles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class EntradaDetalle
    {
        public int EntradaId { get; set; } // EntradaId (Primary key)
        public int ProductoId { get; set; } // ProductoId (Primary key)
        public decimal Cantidad { get; set; } // Cantidad (Primary key)
        public decimal Costo { get; set; } // Costo (Primary key)
        public decimal Costo1 { get; set; } // Costo1 (Primary key)
        public decimal Iva { get; set; } // Iva (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent Entrada pointed by [EntradaDetalles].([EntradaId]) (FK_EntradaDetalles_Entradas)
        /// </summary>
        public virtual Entrada Entrada { get; set; } // FK_EntradaDetalles_Entradas

        /// <summary>
        /// Parent Producto pointed by [EntradaDetalles].([ProductoId]) (FK_EntradaDetalles_Productos)
        /// </summary>
        public virtual Producto Producto { get; set; } // FK_EntradaDetalles_Productos

        public EntradaDetalle()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Formatos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Formato
    {
        public int Id { get; set; } // Id (Primary key)
        public string Descripcion { get; set; } // Descripcion (length: 100)
        public string ImagenMiniatura { get; set; } // ImagenMiniatura (length: 400)
        public string NombreFormato { get; set; } // NombreFormato (length: 100)
        public bool Activo { get; set; } // Activo

        // Reverse navigation

        /// <summary>
        /// Child Sucursales where [Sucursales].[FormatoId] point to this entity (FK_Sucursales_Formatos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sucursale> Sucursales { get; set; } // Sucursales.FK_Sucursales_Formatos

        public Formato()
        {
            Sucursales = new System.Collections.Generic.List<Sucursale>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Lineas
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Linea
    {
        public int Id { get; set; } // Id (Primary key)
        public int? LineaId { get; set; } // LineaId
        public int EmpresaId { get; set; } // EmpresaId
        public int UsuarioCreadorId { get; set; } // UsuarioCreadorId
        public int UsuarioModificadorId { get; set; } // UsuarioModificadorId
        public string Codigo { get; set; } // Codigo (length: 50)
        public string Descripcion { get; set; } // Descripcion (length: 300)
        public bool Activo { get; set; } // Activo
        public System.DateTime Fecha { get; set; } // Fecha

        // Reverse navigation

        /// <summary>
        /// Child Lineas where [Lineas].[LineaId] point to this entity (FK_Lineas_Lineas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Linea> Lineas { get; set; } // Lineas.FK_Lineas_Lineas
        /// <summary>
        /// Child Productoes where [Productos].[LineaId] point to this entity (FK_Productos_Lineas)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Producto> Productoes { get; set; } // Productos.FK_Productos_Lineas

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Lineas].([EmpresaId]) (FK_Lineas_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Lineas_Empresas

        /// <summary>
        /// Parent Linea pointed by [Lineas].([LineaId]) (FK_Lineas_Lineas)
        /// </summary>
        public virtual Linea Linea_LineaId { get; set; } // FK_Lineas_Lineas

        public Linea()
        {
            Lineas = new System.Collections.Generic.List<Linea>();
            Productoes = new System.Collections.Generic.List<Producto>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Lotes
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Lote
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId

        ///<summary>
        /// Codigo
        ///</summary>
        public string Codigo { get; set; } // Codigo (length: 50)

        ///<summary>
        /// Descripcion
        ///</summary>
        public string Descripcion { get; set; } // Descripcion (length: 300)
        public bool Activo { get; set; } // Activo

        ///<summary>
        /// Fecha
        ///</summary>
        public System.DateTime Fecha { get; set; } // Fecha

        public Lote()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Planes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Plane
    {
        public int Id { get; set; } // Id (Primary key)
        public string Codigo { get; set; } // Codigo (length: 10)
        public string Descripcion { get; set; } // Descripcion (length: 100)
        public bool Activo { get; set; } // Activo
        public System.DateTime Fecha { get; set; } // Fecha

        // Reverse navigation

        /// <summary>
        /// Child Empresas where [Empresas].[TipoPlanId] point to this entity (FK_Empresas_Planes)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Empresa> Empresas { get; set; } // Empresas.FK_Empresas_Planes

        public Plane()
        {
            Empresas = new System.Collections.Generic.List<Empresa>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Productos
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Producto
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int? CategoriaId { get; set; } // CategoriaId
        public int? LineaId { get; set; } // LineaId
        public int? ProveedorId { get; set; } // ProveedorId

        ///<summary>
        /// Codigo
        ///</summary>
        public string Codigo { get; set; } // Codigo (length: 50)

        ///<summary>
        /// Descripcion
        ///</summary>
        public byte[] Descripcion { get; set; } // Descripcion (length: 300)

        ///<summary>
        /// Precio
        ///</summary>
        public decimal Precio { get; set; } // Precio
        public decimal? Precio1 { get; set; } // Precio1
        public decimal? Precio2 { get; set; } // Precio2
        public decimal? Precio3 { get; set; } // Precio3
        public bool Activo { get; set; } // Activo

        ///<summary>
        /// Fecha
        ///</summary>
        public System.DateTime Fecha { get; set; } // Fecha
        public string Localizacion { get; set; } // Localizacion (length: 200)
        public string Observacion { get; set; } // Observacion (length: 500)
        public string Imagen { get; set; } // Imagen (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child AlmacenProductoes where [AlmacenProductos].[ProductoId] point to this entity (FK_AlmacenProductos_Productos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AlmacenProducto> AlmacenProductoes { get; set; } // AlmacenProductos.FK_AlmacenProductos_Productos
        /// <summary>
        /// Child EntradaDetalles where [EntradaDetalles].[ProductoId] point to this entity (FK_EntradaDetalles_Productos)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EntradaDetalle> EntradaDetalles { get; set; } // EntradaDetalles.FK_EntradaDetalles_Productos

        // Foreign keys

        /// <summary>
        /// Parent Categoria pointed by [Productos].([CategoriaId]) (FK_Productos_Categorias)
        /// </summary>
        public virtual Categoria Categoria { get; set; } // FK_Productos_Categorias

        /// <summary>
        /// Parent Empresa pointed by [Productos].([EmpresaId]) (FK_Productos_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Productos_Empresas

        /// <summary>
        /// Parent Linea pointed by [Productos].([LineaId]) (FK_Productos_Lineas)
        /// </summary>
        public virtual Linea Linea { get; set; } // FK_Productos_Lineas

        public Producto()
        {
            AlmacenProductoes = new System.Collections.Generic.List<AlmacenProducto>();
            EntradaDetalles = new System.Collections.Generic.List<EntradaDetalle>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Sucursales
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Sucursale
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int? FormatoId { get; set; } // FormatoId
        public int UsuarioCreadorId { get; set; } // UsuarioCreadorId
        public int UsuarioModificadorId { get; set; } // UsuarioModificadorId
        public int? AlmacenPrincipalId { get; set; } // AlmacenPrincipalId

        ///<summary>
        /// Descripcion
        ///</summary>
        public string Descripcion { get; set; } // Descripcion (length: 300)

        ///<summary>
        /// NombreComercial
        ///</summary>
        public string NombreComercial { get; set; } // NombreComercial (length: 100)

        ///<summary>
        /// RFC
        ///</summary>
        public string Rfc { get; set; } // Rfc (length: 100)
        public string Serie { get; set; } // Serie (length: 50)
        public string Calle { get; set; } // Calle (length: 300)
        public string Colonia { get; set; } // Colonia (length: 50)
        public string Ciudad { get; set; } // Ciudad (length: 50)
        public string CodigoPostal { get; set; } // CodigoPostal (length: 50)

        ///<summary>
        /// Municipio
        ///</summary>
        public string Municipio { get; set; } // Municipio (length: 100)
        public string Estado { get; set; } // Estado (length: 100)
        public string Pais { get; set; } // Pais (length: 100)
        public string Telefono { get; set; } // Telefono (length: 50)
        public string Celular { get; set; } // Celular (length: 50)
        public string RutaCer { get; set; } // RutaCer (length: 100)
        public string RutaKey { get; set; } // RutaKey (length: 100)
        public string ClavePrivada { get; set; } // ClavePrivada (length: 100)
        public string Logo { get; set; } // Logo (length: 160)
        public string MensajeComercial { get; set; } // MensajeComercial (length: 100)
        public bool Activo { get; set; } // Activo
        public System.DateTime Fecha { get; set; } // Fecha
        public string ColorReporte { get; set; } // ColorReporte (length: 50)
        public string Asunto { get; set; } // Asunto
        public string Mensaje { get; set; } // Mensaje

        // Reverse navigation

        /// <summary>
        /// Child Almacenes where [Almacenes].[SucursalId] point to this entity (FK_Almacenes_Sucursales)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Almacene> Almacenes { get; set; } // Almacenes.FK_Almacenes_Sucursales

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Sucursales].([EmpresaId]) (FK_Sucursales_Empresas)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // FK_Sucursales_Empresas

        /// <summary>
        /// Parent Formato pointed by [Sucursales].([FormatoId]) (FK_Sucursales_Formatos)
        /// </summary>
        public virtual Formato Formato { get; set; } // FK_Sucursales_Formatos

        public Sucursale()
        {
            Almacenes = new System.Collections.Generic.List<Almacene>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // TiposMovimiento
    ///<summary>
    /// Catalogo
    ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class TiposMovimiento
    {
        public int Id { get; set; } // Id (Primary key)
        public int UsuarioId { get; set; } // UsuarioId
        public int UsuarioCreadorId { get; set; } // UsuarioCreadorId
        public int UsuarioModificadorId { get; set; } // UsuarioModificadorId
        public string Tipo { get; set; } // Tipo (length: 10)

        ///<summary>
        /// Codigo
        ///</summary>
        public string Codigo { get; set; } // Codigo (length: 50)

        ///<summary>
        /// Descripcion
        ///</summary>
        public string Descripcion { get; set; } // Descripcion (length: 300)

        ///<summary>
        /// Clasificacion
        ///</summary>
        public string Clasificacion { get; set; } // Clasificacion (length: 50)
        public bool Activo { get; set; } // Activo
        public System.DateTime Fecha { get; set; } // Fecha

        public TiposMovimiento()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // Almacenes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AlmaceneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Almacene>
    {
        public AlmaceneConfiguration()
            : this("dbo")
        {
        }

        public AlmaceneConfiguration(string schema)
        {
            ToTable("Almacenes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SucursalId).HasColumnName(@"SucursalId").HasColumnType("int").IsRequired();
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.ValorMin).HasColumnName(@"ValorMin").HasColumnType("decimal").IsRequired().HasPrecision(18,6);
            Property(x => x.ValorMax).HasColumnName(@"ValorMax").HasColumnType("decimal").IsRequired().HasPrecision(18,6);
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Almacenes).HasForeignKey(c => c.SucursalId).WillCascadeOnDelete(false); // FK_Almacenes_Empresas
            HasRequired(a => a.Sucursale).WithMany(b => b.Almacenes).HasForeignKey(c => c.SucursalId).WillCascadeOnDelete(false); // FK_Almacenes_Sucursales
        }
    }

    // AlmacenProductos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AlmacenProductoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AlmacenProducto>
    {
        public AlmacenProductoConfiguration()
            : this("dbo")
        {
        }

        public AlmacenProductoConfiguration(string schema)
        {
            ToTable("AlmacenProductos", schema);
            HasKey(x => new { x.ProductoId, x.AlmacenId, x.Stock });

            Property(x => x.ProductoId).HasColumnName(@"ProductoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AlmacenId).HasColumnName(@"AlmacenId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Stock).HasColumnName(@"Stock").HasColumnType("decimal").IsRequired().HasPrecision(18,6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FechaUltimo).HasColumnName(@"FechaUltimo").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Almacene).WithMany(b => b.AlmacenProductoes).HasForeignKey(c => c.AlmacenId).WillCascadeOnDelete(false); // FK_AlmacenProductos_Almacenes
            HasRequired(a => a.Producto).WithMany(b => b.AlmacenProductoes).HasForeignKey(c => c.ProductoId).WillCascadeOnDelete(false); // FK_AlmacenProductos_Productos
        }
    }

    // Categorias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CategoriaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Categoria>
    {
        public CategoriaConfiguration()
            : this("dbo")
        {
        }

        public CategoriaConfiguration(string schema)
        {
            ToTable("Categorias", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Categorias).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Categorias_Empresas
        }
    }

    // Clientes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClienteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cliente>
    {
        public ClienteConfiguration()
            : this("dbo")
        {
        }

        public ClienteConfiguration(string schema)
        {
            ToTable("Clientes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("int").IsRequired();
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Calle).HasColumnName(@"Calle").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Colonia).HasColumnName(@"Colonia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Ciudad).HasColumnName(@"Ciudad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CodigoPostal).HasColumnName(@"CodigoPostal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Estado).HasColumnName(@"Estado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Pais).HasColumnName(@"Pais").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Telefono).HasColumnName(@"Telefono").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Celular).HasColumnName(@"Celular").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NombreContacto).HasColumnName(@"NombreContacto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Rfc).HasColumnName(@"Rfc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Correo).HasColumnName(@"Correo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.TieneCredito).HasColumnName(@"TieneCredito").HasColumnType("bit").IsRequired();
            Property(x => x.DiasCredito).HasColumnName(@"DiasCredito").HasColumnType("int").IsRequired();
            Property(x => x.LimiteCredito).HasColumnName(@"LimiteCredito").HasColumnType("decimal").IsRequired().HasPrecision(18,6);

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Clientes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Clientes_Empresas
        }
    }

    // Empresas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmpresaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Empresa>
    {
        public EmpresaConfiguration()
            : this("dbo")
        {
        }

        public EmpresaConfiguration(string schema)
        {
            ToTable("Empresas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TipoPlanId).HasColumnName(@"TipoPlanId").HasColumnType("int").IsRequired();
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Avatar).HasColumnName(@"Avatar").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsOptional();
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Plane).WithMany(b => b.Empresas).HasForeignKey(c => c.TipoPlanId).WillCascadeOnDelete(false); // FK_Empresas_Planes
        }
    }

    // Entradas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EntradaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Entrada>
    {
        public EntradaConfiguration()
            : this("dbo")
        {
        }

        public EntradaConfiguration(string schema)
        {
            ToTable("Entradas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.ProveedorId).HasColumnName(@"ProveedorId").HasColumnType("int").IsOptional();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.FechaMovimiento).HasColumnName(@"FechaMovimiento").HasColumnType("datetime").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.Entradas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Entradas_Empresas
        }
    }

    // EntradaDetalles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EntradaDetalleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EntradaDetalle>
    {
        public EntradaDetalleConfiguration()
            : this("dbo")
        {
        }

        public EntradaDetalleConfiguration(string schema)
        {
            ToTable("EntradaDetalles", schema);
            HasKey(x => new { x.EntradaId, x.ProductoId, x.Cantidad, x.Costo, x.Costo1, x.Iva });

            Property(x => x.EntradaId).HasColumnName(@"EntradaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProductoId).HasColumnName(@"ProductoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Cantidad).HasColumnName(@"Cantidad").HasColumnType("decimal").IsRequired().HasPrecision(18,6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Costo).HasColumnName(@"Costo").HasColumnType("decimal").IsRequired().HasPrecision(18,6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Costo1).HasColumnName(@"Costo1").HasColumnType("decimal").IsRequired().HasPrecision(18,6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Iva).HasColumnName(@"Iva").HasColumnType("decimal").IsRequired().HasPrecision(18,6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.Entrada).WithMany(b => b.EntradaDetalles).HasForeignKey(c => c.EntradaId).WillCascadeOnDelete(false); // FK_EntradaDetalles_Entradas
            HasRequired(a => a.Producto).WithMany(b => b.EntradaDetalles).HasForeignKey(c => c.ProductoId).WillCascadeOnDelete(false); // FK_EntradaDetalles_Productos
        }
    }

    // Formatos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FormatoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Formato>
    {
        public FormatoConfiguration()
            : this("dbo")
        {
        }

        public FormatoConfiguration(string schema)
        {
            ToTable("Formatos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ImagenMiniatura).HasColumnName(@"ImagenMiniatura").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(400);
            Property(x => x.NombreFormato).HasColumnName(@"NombreFormato").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
        }
    }

    // Lineas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LineaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Linea>
    {
        public LineaConfiguration()
            : this("dbo")
        {
        }

        public LineaConfiguration(string schema)
        {
            ToTable("Lineas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LineaId).HasColumnName(@"LineaId").HasColumnType("int").IsOptional();
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("int").IsRequired();
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.Linea_LineaId).WithMany(b => b.Lineas).HasForeignKey(c => c.LineaId).WillCascadeOnDelete(false); // FK_Lineas_Lineas
            HasRequired(a => a.Empresa).WithMany(b => b.Lineas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Lineas_Empresas
        }
    }

    // Lotes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class LoteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Lote>
    {
        public LoteConfiguration()
            : this("dbo")
        {
        }

        public LoteConfiguration(string schema)
        {
            ToTable("Lotes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
        }
    }

    // Planes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class PlaneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Plane>
    {
        public PlaneConfiguration()
            : this("dbo")
        {
        }

        public PlaneConfiguration(string schema)
        {
            ToTable("Planes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
        }
    }

    // Productos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ProductoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Producto>
    {
        public ProductoConfiguration()
            : this("dbo")
        {
        }

        public ProductoConfiguration(string schema)
        {
            ToTable("Productos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.CategoriaId).HasColumnName(@"CategoriaId").HasColumnType("int").IsOptional();
            Property(x => x.LineaId).HasColumnName(@"LineaId").HasColumnType("int").IsOptional();
            Property(x => x.ProveedorId).HasColumnName(@"ProveedorId").HasColumnType("int").IsOptional();
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varbinary").IsRequired().HasMaxLength(300);
            Property(x => x.Precio).HasColumnName(@"Precio").HasColumnType("decimal").IsRequired().HasPrecision(18,6);
            Property(x => x.Precio1).HasColumnName(@"Precio1").HasColumnType("decimal").IsOptional().HasPrecision(18,6);
            Property(x => x.Precio2).HasColumnName(@"Precio2").HasColumnType("decimal").IsOptional().HasPrecision(18,6);
            Property(x => x.Precio3).HasColumnName(@"Precio3").HasColumnType("decimal").IsOptional().HasPrecision(18,6);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.Localizacion).HasColumnName(@"Localizacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.Observacion).HasColumnName(@"Observacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Imagen).HasColumnName(@"Imagen").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasOptional(a => a.Categoria).WithMany(b => b.Productoes).HasForeignKey(c => c.CategoriaId).WillCascadeOnDelete(false); // FK_Productos_Categorias
            HasOptional(a => a.Linea).WithMany(b => b.Productoes).HasForeignKey(c => c.LineaId).WillCascadeOnDelete(false); // FK_Productos_Lineas
            HasRequired(a => a.Empresa).WithMany(b => b.Productoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Productos_Empresas
        }
    }

    // Sucursales
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SucursaleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sucursale>
    {
        public SucursaleConfiguration()
            : this("dbo")
        {
        }

        public SucursaleConfiguration(string schema)
        {
            ToTable("Sucursales", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.FormatoId).HasColumnName(@"FormatoId").HasColumnType("int").IsOptional();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("int").IsRequired();
            Property(x => x.AlmacenPrincipalId).HasColumnName(@"AlmacenPrincipalId").HasColumnType("int").IsOptional();
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.NombreComercial).HasColumnName(@"NombreComercial").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Rfc).HasColumnName(@"Rfc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Serie).HasColumnName(@"Serie").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Calle).HasColumnName(@"Calle").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Colonia).HasColumnName(@"Colonia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Ciudad).HasColumnName(@"Ciudad").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CodigoPostal).HasColumnName(@"CodigoPostal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Estado).HasColumnName(@"Estado").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Pais).HasColumnName(@"Pais").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Telefono).HasColumnName(@"Telefono").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Celular).HasColumnName(@"Celular").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RutaCer).HasColumnName(@"RutaCer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.RutaKey).HasColumnName(@"RutaKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ClavePrivada).HasColumnName(@"ClavePrivada").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Logo).HasColumnName(@"Logo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(160);
            Property(x => x.MensajeComercial).HasColumnName(@"MensajeComercial").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
            Property(x => x.ColorReporte).HasColumnName(@"ColorReporte").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Asunto).HasColumnName(@"Asunto").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Mensaje).HasColumnName(@"Mensaje").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);

            // Foreign keys
            HasOptional(a => a.Formato).WithMany(b => b.Sucursales).HasForeignKey(c => c.FormatoId).WillCascadeOnDelete(false); // FK_Sucursales_Formatos
            HasRequired(a => a.Empresa).WithMany(b => b.Sucursales).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Sucursales_Empresas
        }
    }

    // TiposMovimiento
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TiposMovimientoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TiposMovimiento>
    {
        public TiposMovimientoConfiguration()
            : this("dbo")
        {
        }

        public TiposMovimientoConfiguration(string schema)
        {
            ToTable("TiposMovimiento", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UsuarioId).HasColumnName(@"UsuarioId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("int").IsRequired();
            Property(x => x.Tipo).HasColumnName(@"Tipo").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Codigo).HasColumnName(@"Codigo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Descripcion).HasColumnName(@"Descripcion").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(300);
            Property(x => x.Clasificacion).HasColumnName(@"Clasificacion").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired();
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired();
        }
    }

    #endregion

}
// </auto-generated>

