// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 1.4
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Farmacia.POS.Model
{
    using Farmacia.POS.Model;

    // Cobranzas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CobranzaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cobranza>
    {
        public CobranzaConfiguration()
            : this("dbo")
        {
        }

        public CobranzaConfiguration(string schema)
        {
            ToTable("Cobranzas", schema);
            HasKey(x => new { x.Id, x.ClienteId, x.EmpresaId, x.SucursalId, x.SaldoActual, x.Activo, x.Fecha });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClienteId).HasColumnName(@"ClienteId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SucursalId).HasColumnName(@"SucursalId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UsuarioCreadorId).HasColumnName(@"UsuarioCreadorId").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.UsuarioModificadorId).HasColumnName(@"UsuarioModificadorId").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.SaldoActual).HasColumnName(@"SaldoActual").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Activo).HasColumnName(@"Activo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fecha).HasColumnName(@"Fecha").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.Cliente).WithMany(b => b.Cobranzas).HasForeignKey(c => c.ClienteId).WillCascadeOnDelete(false); // FK_Cobranzas_Clientes
            HasRequired(a => a.Empresa).WithMany(b => b.Cobranzas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // FK_Cobranzas_Empresas
            HasRequired(a => a.Sucursale).WithMany(b => b.Cobranzas).HasForeignKey(c => c.SucursalId).WillCascadeOnDelete(false); // FK_Cobranzas_Sucursales
        }
    }

}
// </auto-generated>
