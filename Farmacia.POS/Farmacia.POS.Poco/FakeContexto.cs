// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 1.4
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Farmacia.POS.Model
{
    using Farmacia.POS.Model;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeContexto : IContexto
    {
        public System.Data.Entity.DbSet<Almacene> Almacenes { get; set; }
        public System.Data.Entity.DbSet<AlmacenProducto> AlmacenProductoes { get; set; }
        public System.Data.Entity.DbSet<Categoria> Categorias { get; set; }
        public System.Data.Entity.DbSet<Cliente> Clientes { get; set; }
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; }
        public System.Data.Entity.DbSet<Entrada> Entradas { get; set; }
        public System.Data.Entity.DbSet<EntradaDetalle> EntradaDetalles { get; set; }
        public System.Data.Entity.DbSet<Formato> Formatoes { get; set; }
        public System.Data.Entity.DbSet<Linea> Lineas { get; set; }
        public System.Data.Entity.DbSet<Lote> Lotes { get; set; }
        public System.Data.Entity.DbSet<Plane> Planes { get; set; }
        public System.Data.Entity.DbSet<Producto> Productoes { get; set; }
        public System.Data.Entity.DbSet<Sucursale> Sucursales { get; set; }
        public System.Data.Entity.DbSet<TiposMovimiento> TiposMovimientoes { get; set; }

        public FakeContexto()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            Almacenes = new FakeDbSet<Almacene>("Id");
            AlmacenProductoes = new FakeDbSet<AlmacenProducto>("ProductoId", "AlmacenId", "Stock");
            Categorias = new FakeDbSet<Categoria>("Id");
            Clientes = new FakeDbSet<Cliente>("Id");
            Empresas = new FakeDbSet<Empresa>("Id");
            Entradas = new FakeDbSet<Entrada>("Id");
            EntradaDetalles = new FakeDbSet<EntradaDetalle>("EntradaId", "ProductoId", "Cantidad", "Costo", "Costo1", "Iva");
            Formatoes = new FakeDbSet<Formato>("Id");
            Lineas = new FakeDbSet<Linea>("Id");
            Lotes = new FakeDbSet<Lote>("Id");
            Planes = new FakeDbSet<Plane>("Id");
            Productoes = new FakeDbSet<Producto>("Id");
            Sucursales = new FakeDbSet<Sucursale>("Id");
            TiposMovimientoes = new FakeDbSet<TiposMovimiento>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }
}
// </auto-generated>
